{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "A2A Agent Definitions",
  "description": "Agent-related type definitions for the A2A protocol",
  "definitions": {
    "AgentCard": {
      "description": "The AgentCard is a self-describing manifest for an agent. It provides essential\nmetadata including the agent's identity, capabilities, skills, supported\ncommunication methods, and security requirements.",
      "properties": {
        "additionalInterfaces": {
          "description": "A list of additional supported interfaces (transport and URL combinations).\nThis allows agents to expose multiple transports, potentially at different URLs.\n\nBest practices:\n- SHOULD include all supported transports for completeness\n- SHOULD include an entry matching the main 'url' and 'preferredTransport'\n- MAY reuse URLs if multiple transports are available at the same endpoint\n- MUST accurately declare the transport available at each URL\n\nClients can select any interface from this list based on their transport capabilities\nand preferences. This enables transport negotiation and fallback scenarios.",
          "items": {
            "$ref": "#/definitions/AgentInterface"
          },
          "type": "array"
        },
        "capabilities": {
          "$ref": "#/definitions/AgentCapabilities",
          "description": "A declaration of optional capabilities supported by the agent."
        },
        "defaultInputModes": {
          "description": "Default set of supported input MIME types for all skills, which can be\noverridden on a per-skill basis.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "defaultOutputModes": {
          "description": "Default set of supported output MIME types for all skills, which can be\noverridden on a per-skill basis.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "description": "A human-readable description of the agent, assisting users and other agents\nin understanding its purpose.",
          "examples": [
            "Agent that helps users with recipes and cooking."
          ],
          "type": "string"
        },
        "documentationUrl": {
          "description": "An optional URL to the agent's documentation.",
          "type": "string"
        },
        "iconUrl": {
          "description": "An optional URL to an icon for the agent.",
          "type": "string"
        },
        "name": {
          "description": "A human-readable name for the agent.",
          "examples": [
            "Recipe Agent"
          ],
          "type": "string"
        },
        "preferredTransport": {
          "default": "JSONRPC",
          "description": "The transport protocol for the preferred endpoint (the main 'url' field).\nIf not specified, defaults to 'JSONRPC'.\n\nIMPORTANT: The transport specified here MUST be available at the main 'url'.\nThis creates a binding between the main URL and its supported transport protocol.\nClients should prefer this transport and URL combination when both are supported.",
          "examples": [
            "JSONRPC",
            "GRPC",
            "HTTP+JSON"
          ],
          "type": "string"
        },
        "protocolVersion": {
          "default": "0.3.0",
          "description": "The version of the A2A protocol this agent supports.",
          "type": "string"
        },
        "provider": {
          "$ref": "#/definitions/AgentProvider",
          "description": "Information about the agent's service provider."
        },
        "security": {
          "description": "A list of security requirement objects that apply to all agent interactions. Each object\nlists security schemes that can be used. Follows the OpenAPI 3.0 Security Requirement Object.\nThis list can be seen as an OR of ANDs. Each object in the list describes one possible\nset of security requirements that must be present on a request. This allows specifying,\nfor example, \"callers must either use OAuth OR an API Key AND mTLS.\"",
          "examples": [
            [
              {
                "oauth": [
                  "read"
                ]
              },
              {
                "api-key": [],
                "mtls": []
              }
            ]
          ],
          "items": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "type": "array"
        },
        "securitySchemes": {
          "additionalProperties": {
            "$ref": "security.json#/definitions/SecurityScheme"
          },
          "description": "A declaration of the security schemes available to authorize requests. The key is the\nscheme name. Follows the OpenAPI 3.0 Security Scheme Object.",
          "type": "object"
        },
        "signatures": {
          "description": "JSON Web Signatures computed for this AgentCard.",
          "items": {
            "$ref": "#/definitions/AgentCardSignature"
          },
          "type": "array"
        },
        "skills": {
          "description": "The set of skills, or distinct capabilities, that the agent can perform.",
          "items": {
            "$ref": "#/definitions/AgentSkill"
          },
          "type": "array"
        },
        "supportsAuthenticatedExtendedCard": {
          "description": "If true, the agent can provide an extended agent card with additional details\nto authenticated users. Defaults to false.",
          "type": "boolean"
        },
        "url": {
          "description": "The preferred endpoint URL for interacting with the agent.\nThis URL MUST support the transport specified by 'preferredTransport'.",
          "examples": [
            "https://api.example.com/a2a/v1"
          ],
          "type": "string"
        },
        "version": {
          "description": "The agent's own version number. The format is defined by the provider.",
          "examples": [
            "1.0.0"
          ],
          "type": "string"
        }
      },
      "required": [
        "capabilities",
        "defaultInputModes",
        "defaultOutputModes",
        "description",
        "name",
        "protocolVersion",
        "skills",
        "url",
        "version"
      ],
      "type": "object"
    },
    "AgentCapabilities": {
      "description": "Defines optional capabilities supported by an agent.",
      "properties": {
        "extensions": {
          "description": "A list of protocol extensions supported by the agent.",
          "items": {
            "$ref": "#/definitions/AgentExtension"
          },
          "type": "array"
        },
        "pushNotifications": {
          "description": "Indicates if the agent supports sending push notifications for asynchronous task updates.",
          "type": "boolean"
        },
        "stateTransitionHistory": {
          "description": "Indicates if the agent provides a history of state transitions for a task.",
          "type": "boolean"
        },
        "streaming": {
          "description": "Indicates if the agent supports Server-Sent Events (SSE) for streaming responses.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AgentProvider": {
      "description": "Represents the service provider of an agent.",
      "examples": [
        {
          "organization": "Google",
          "url": "https://ai.google.dev"
        }
      ],
      "properties": {
        "organization": {
          "description": "The name of the agent provider's organization.",
          "type": "string"
        },
        "url": {
          "description": "A URL for the agent provider's website or relevant documentation.",
          "type": "string"
        }
      },
      "required": [
        "organization",
        "url"
      ],
      "type": "object"
    },
    "AgentSkill": {
      "description": "Represents a distinct capability or function that an agent can perform.",
      "properties": {
        "description": {
          "description": "A detailed description of the skill, intended to help clients or users\nunderstand its purpose and functionality.",
          "type": "string"
        },
        "examples": {
          "description": "Example prompts or scenarios that this skill can handle. Provides a hint to\nthe client on how to use the skill.",
          "examples": [
            [
              "I need a recipe for bread"
            ]
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "A unique identifier for the agent's skill.",
          "type": "string"
        },
        "inputModes": {
          "description": "The set of supported input MIME types for this skill, overriding the agent's defaults.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "A human-readable name for the skill.",
          "type": "string"
        },
        "outputModes": {
          "description": "The set of supported output MIME types for this skill, overriding the agent's defaults.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "security": {
          "description": "Security schemes necessary for the agent to leverage this skill.\nAs in the overall AgentCard.security, this list represents a logical OR of security\nrequirement objects. Each object is a set of security schemes that must be used together\n(a logical AND).",
          "examples": [
            [
              {
                "google": [
                  "oidc"
                ]
              }
            ]
          ],
          "items": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "type": "array"
        },
        "tags": {
          "description": "A set of keywords describing the skill's capabilities.",
          "examples": [
            [
              "cooking",
              "customer support",
              "billing"
            ]
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "description",
        "id",
        "name",
        "tags"
      ],
      "type": "object"
    },
    "AgentInterface": {
      "description": "Declares a combination of a target URL and a transport protocol for interacting with the agent.\nThis allows agents to expose the same functionality over multiple transport mechanisms.",
      "properties": {
        "transport": {
          "description": "The transport protocol supported at this URL.",
          "examples": [
            "JSONRPC",
            "GRPC",
            "HTTP+JSON"
          ],
          "type": "string"
        },
        "url": {
          "description": "The URL where this interface is available. Must be a valid absolute HTTPS URL in production.",
          "examples": [
            "https://api.example.com/a2a/v1",
            "https://grpc.example.com/a2a",
            "https://rest.example.com/v1"
          ],
          "type": "string"
        }
      },
      "required": [
        "transport",
        "url"
      ],
      "type": "object"
    },
    "AgentExtension": {
      "description": "A declaration of a protocol extension supported by an Agent.",
      "examples": [
        {
          "description": "Google OAuth 2.0 authentication",
          "required": false,
          "uri": "https://developers.google.com/identity/protocols/oauth2"
        }
      ],
      "properties": {
        "description": {
          "description": "A human-readable description of how this agent uses the extension.",
          "type": "string"
        },
        "params": {
          "additionalProperties": {},
          "description": "Optional, extension-specific configuration parameters.",
          "type": "object"
        },
        "required": {
          "description": "If true, the client must understand and comply with the extension's requirements\nto interact with the agent.",
          "type": "boolean"
        },
        "uri": {
          "description": "The unique URI identifying the extension.",
          "type": "string"
        }
      },
      "required": [
        "uri"
      ],
      "type": "object"
    },
    "AgentCardSignature": {
      "description": "AgentCardSignature represents a JWS signature of an AgentCard.\nThis follows the JSON format of an RFC 7515 JSON Web Signature (JWS).",
      "properties": {
        "header": {
          "additionalProperties": {},
          "description": "The unprotected JWS header values.",
          "type": "object"
        },
        "protected": {
          "description": "The protected JWS header for the signature. This is a Base64url-encoded\nJSON object, as per RFC 7515.",
          "type": "string"
        },
        "signature": {
          "description": "The computed signature, Base64url-encoded.",
          "type": "string"
        }
      },
      "required": [
        "protected",
        "signature"
      ],
      "type": "object"
    },
    "TransportProtocol": {
      "description": "Supported A2A transport protocols.",
      "enum": [
        "JSONRPC",
        "GRPC",
        "HTTP+JSON"
      ],
      "type": "string"
    }
  }
}
