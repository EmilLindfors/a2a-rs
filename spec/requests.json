{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "A2A Request/Response Definitions",
  "description": "Method-specific requests and responses for the A2A protocol",
  "definitions": {
    "A2ARequest": {
      "anyOf": [
        {
          "$ref": "#/definitions/SendMessageRequest"
        },
        {
          "$ref": "#/definitions/SendStreamingMessageRequest"
        },
        {
          "$ref": "#/definitions/GetTaskRequest"
        },
        {
          "$ref": "#/definitions/ListTasksRequest"
        },
        {
          "$ref": "#/definitions/CancelTaskRequest"
        },
        {
          "$ref": "#/definitions/SetTaskPushNotificationConfigRequest"
        },
        {
          "$ref": "#/definitions/GetTaskPushNotificationConfigRequest"
        },
        {
          "$ref": "#/definitions/TaskResubscriptionRequest"
        },
        {
          "$ref": "#/definitions/ListTaskPushNotificationConfigRequest"
        },
        {
          "$ref": "#/definitions/DeleteTaskPushNotificationConfigRequest"
        },
        {
          "$ref": "#/definitions/GetAuthenticatedExtendedCardRequest"
        }
      ],
      "description": "A discriminated union representing all possible JSON-RPC 2.0 requests supported by the A2A specification."
    },
    "SendMessageRequest": {
      "description": "JSON-RPC request model for the 'message/send' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "message/send",
          "description": "A String containing the name of the method to be invoked.",
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/MessageSendParams",
          "description": "A Structured value that holds the parameter values to be used during the invocation of the method."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "SendStreamingMessageRequest": {
      "description": "JSON-RPC request model for the 'message/stream' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "message/stream",
          "description": "A String containing the name of the method to be invoked.",
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/MessageSendParams",
          "description": "A Structured value that holds the parameter values to be used during the invocation of the method."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "GetTaskRequest": {
      "description": "JSON-RPC request model for the 'tasks/get' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "tasks/get",
          "description": "A String containing the name of the method to be invoked.",
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/TaskQueryParams",
          "description": "A Structured value that holds the parameter values to be used during the invocation of the method."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "CancelTaskRequest": {
      "description": "JSON-RPC request model for the 'tasks/cancel' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "tasks/cancel",
          "description": "A String containing the name of the method to be invoked.",
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/TaskIdParams",
          "description": "A Structured value that holds the parameter values to be used during the invocation of the method."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "SetTaskPushNotificationConfigRequest": {
      "description": "JSON-RPC request model for the 'tasks/pushNotificationConfig/set' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "tasks/pushNotificationConfig/set",
          "description": "A String containing the name of the method to be invoked.",
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/TaskPushNotificationConfig",
          "description": "A Structured value that holds the parameter values to be used during the invocation of the method."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "GetTaskPushNotificationConfigRequest": {
      "description": "Represents a JSON-RPC request for the `tasks/pushNotificationConfig/get` method.",
      "properties": {
        "id": {
          "description": "The identifier for this request.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "tasks/pushNotificationConfig/get",
          "description": "The method name. Must be 'tasks/pushNotificationConfig/get'.",
          "type": "string"
        },
        "params": {
          "anyOf": [
            {
              "$ref": "#/definitions/TaskIdParams"
            },
            {
              "$ref": "#/definitions/GetTaskPushNotificationConfigParams"
            }
          ],
          "description": "The parameters for getting a push notification configuration."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "TaskResubscriptionRequest": {
      "description": "Represents a JSON-RPC request for the `tasks/resubscribe` method, used to resume a streaming connection.",
      "properties": {
        "id": {
          "description": "The identifier for this request.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "tasks/resubscribe",
          "description": "The method name. Must be 'tasks/resubscribe'.",
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/TaskIdParams",
          "description": "The parameters identifying the task to resubscribe to."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "ListTasksRequest": {
      "description": "JSON-RPC request model for the 'tasks/list' method.",
      "properties": {
        "id": {
          "description": "A unique identifier established by the client. It must be a String, a Number, or null.\nThe server must reply with the same value in the response. This property is omitted for notifications.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "tasks/list",
          "description": "A String containing the name of the method to be invoked.",
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/ListTasksParams",
          "description": "A Structured value that holds the parameter values to be used during the invocation of the method."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method"
      ],
      "type": "object"
    },
    "ListTaskPushNotificationConfigRequest": {
      "description": "Represents a JSON-RPC request for the `tasks/pushNotificationConfig/list` method.",
      "properties": {
        "id": {
          "description": "The identifier for this request.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "tasks/pushNotificationConfig/list",
          "description": "The method name. Must be 'tasks/pushNotificationConfig/list'.",
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/ListTaskPushNotificationConfigParams",
          "description": "The parameters identifying the task whose configurations are to be listed."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "DeleteTaskPushNotificationConfigRequest": {
      "description": "Represents a JSON-RPC request for the `tasks/pushNotificationConfig/delete` method.",
      "properties": {
        "id": {
          "description": "The identifier for this request.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "tasks/pushNotificationConfig/delete",
          "description": "The method name. Must be 'tasks/pushNotificationConfig/delete'.",
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/DeleteTaskPushNotificationConfigParams",
          "description": "The parameters identifying the push notification configuration to delete."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "GetAuthenticatedExtendedCardRequest": {
      "description": "Represents a JSON-RPC request for the `agent/getAuthenticatedExtendedCard` method.",
      "properties": {
        "id": {
          "description": "The identifier for this request.",
          "type": [
            "string",
            "integer"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "method": {
          "const": "agent/getAuthenticatedExtendedCard",
          "description": "The method name. Must be 'agent/getAuthenticatedExtendedCard'.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "method"
      ],
      "type": "object"
    },
    "MessageSendParams": {
      "description": "Sent by the client to the agent as a request. May create, continue or restart a task.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/MessageSendConfiguration",
          "description": "Send message configuration."
        },
        "message": {
          "$ref": "message.json#/definitions/Message",
          "description": "The message being sent to the server."
        },
        "metadata": {
          "additionalProperties": {},
          "description": "Extension metadata.",
          "type": "object"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "MessageSendConfiguration": {
      "description": "Defines configuration options for a `message/send` or `message/stream` request.",
      "properties": {
        "acceptedOutputModes": {
          "description": "A list of output MIME types the client is prepared to accept in the response.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "blocking": {
          "description": "If true, the client will wait for the task to complete. The server may reject this if the task is long-running.",
          "type": "boolean"
        },
        "historyLength": {
          "description": "The number of most recent messages from the task's history to retrieve in the response.",
          "type": "integer"
        },
        "pushNotificationConfig": {
          "$ref": "notifications.json#/definitions/PushNotificationConfig",
          "description": "Configuration for the agent to send push notifications for updates after the initial response."
        }
      },
      "type": "object"
    },
    "TaskIdParams": {
      "description": "Parameters containing only a task ID, used for simple task operations.",
      "properties": {
        "id": {
          "description": "Task id.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {},
          "type": "object"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "TaskQueryParams": {
      "description": "Parameters for querying a task, including optional history length.",
      "properties": {
        "historyLength": {
          "description": "Number of recent messages to be retrieved.",
          "type": "integer"
        },
        "id": {
          "description": "Task id.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {},
          "type": "object"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "TaskPushNotificationConfig": {
      "description": "A container associating a push notification configuration with a specific task.",
      "properties": {
        "pushNotificationConfig": {
          "$ref": "notifications.json#/definitions/PushNotificationConfig",
          "description": "The push notification configuration for this task."
        },
        "taskId": {
          "description": "The unique identifier (e.g. UUID) of the task.",
          "type": "string"
        }
      },
      "required": [
        "pushNotificationConfig",
        "taskId"
      ],
      "type": "object"
    },
    "ListTasksParams": {
      "description": "Parameters for listing tasks with optional filtering criteria.",
      "properties": {
        "contextId": {
          "description": "Filter tasks by context ID to get tasks from a specific conversation or session.",
          "type": "string"
        },
        "historyLength": {
          "description": "Number of recent messages to include in each task's history. Must be non-negative. Defaults to 0 if not specified.",
          "type": "integer"
        },
        "includeArtifacts": {
          "description": "Whether to include artifacts in the returned tasks. Defaults to false to reduce payload size.",
          "type": "boolean"
        },
        "lastUpdatedAfter": {
          "description": "Filter tasks updated after this timestamp (milliseconds since epoch). Only tasks with a last updated time greater than or equal to this value will be returned.",
          "type": "integer"
        },
        "metadata": {
          "additionalProperties": {},
          "description": "Request-specific metadata.",
          "type": "object"
        },
        "pageSize": {
          "description": "Maximum number of tasks to return. Must be between 1 and 100. Defaults to 50 if not specified.",
          "type": "integer"
        },
        "pageToken": {
          "description": "Token for pagination. Use the nextPageToken from a previous ListTasksResult response.",
          "type": "string"
        },
        "status": {
          "$ref": "task.json#/definitions/TaskState",
          "description": "Filter tasks by their current status state."
        }
      },
      "type": "object"
    },
    "GetTaskPushNotificationConfigParams": {
      "description": "Defines parameters for fetching a specific push notification configuration for a task.",
      "properties": {
        "id": {
          "description": "The unique identifier (e.g. UUID) of the task.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {},
          "description": "Optional metadata associated with the request.",
          "type": "object"
        },
        "pushNotificationConfigId": {
          "description": "The ID of the push notification configuration to retrieve.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "ListTaskPushNotificationConfigParams": {
      "description": "Defines parameters for listing all push notification configurations associated with a task.",
      "properties": {
        "id": {
          "description": "The unique identifier (e.g. UUID) of the task.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {},
          "description": "Optional metadata associated with the request.",
          "type": "object"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "DeleteTaskPushNotificationConfigParams": {
      "description": "Defines parameters for deleting a specific push notification configuration for a task.",
      "properties": {
        "id": {
          "description": "The unique identifier (e.g. UUID) of the task.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {},
          "description": "Optional metadata associated with the request.",
          "type": "object"
        },
        "pushNotificationConfigId": {
          "description": "The ID of the push notification configuration to delete.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "pushNotificationConfigId"
      ],
      "type": "object"
    },
    "ListTasksResult": {
      "description": "Result object for tasks/list method containing an array of tasks and pagination information.",
      "properties": {
        "nextPageToken": {
          "description": "Token for retrieving the next page. Empty string if no more results.",
          "type": "string"
        },
        "pageSize": {
          "description": "Maximum number of tasks returned in this response.",
          "type": "integer"
        },
        "tasks": {
          "description": "Array of tasks matching the specified criteria.",
          "items": {
            "$ref": "task.json#/definitions/Task"
          },
          "type": "array"
        },
        "totalSize": {
          "description": "Total number of tasks available (before pagination).",
          "type": "integer"
        }
      },
      "required": [
        "nextPageToken",
        "pageSize",
        "tasks",
        "totalSize"
      ],
      "type": "object"
    },
    "SendMessageResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/SendMessageSuccessResponse"
        }
      ],
      "description": "JSON-RPC response model for the 'message/send' method."
    },
    "SendMessageSuccessResponse": {
      "description": "JSON-RPC success response model for the 'message/send' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "anyOf": [
            {
              "$ref": "task.json#/definitions/Task"
            },
            {
              "$ref": "message.json#/definitions/Message"
            }
          ],
          "description": "The result object on success"
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    },
    "SendStreamingMessageResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/SendStreamingMessageSuccessResponse"
        }
      ],
      "description": "JSON-RPC response model for the 'message/stream' method."
    },
    "SendStreamingMessageSuccessResponse": {
      "description": "JSON-RPC success response model for the 'message/stream' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "anyOf": [
            {
              "$ref": "task.json#/definitions/Task"
            },
            {
              "$ref": "message.json#/definitions/Message"
            },
            {
              "$ref": "events.json#/definitions/TaskStatusUpdateEvent"
            },
            {
              "$ref": "events.json#/definitions/TaskArtifactUpdateEvent"
            }
          ],
          "description": "The result object on success"
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    },
    "GetTaskResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/GetTaskSuccessResponse"
        }
      ],
      "description": "JSON-RPC response for the 'tasks/get' method."
    },
    "GetTaskSuccessResponse": {
      "description": "JSON-RPC success response for the 'tasks/get' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "$ref": "task.json#/definitions/Task",
          "description": "The result object on success."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    },
    "CancelTaskResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/CancelTaskSuccessResponse"
        }
      ],
      "description": "JSON-RPC response for the 'tasks/cancel' method."
    },
    "CancelTaskSuccessResponse": {
      "description": "JSON-RPC success response model for the 'tasks/cancel' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "$ref": "task.json#/definitions/Task",
          "description": "The result object on success."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    },
    "SetTaskPushNotificationConfigResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/SetTaskPushNotificationConfigSuccessResponse"
        }
      ],
      "description": "JSON-RPC response for the 'tasks/pushNotificationConfig/set' method."
    },
    "SetTaskPushNotificationConfigSuccessResponse": {
      "description": "JSON-RPC success response model for the 'tasks/pushNotificationConfig/set' method.",
      "properties": {
        "id": {
          "description": "An identifier established by the Client that MUST contain a String, Number.\nNumbers SHOULD NOT contain fractional parts.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/TaskPushNotificationConfig",
          "description": "The result object on success."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    },
    "GetTaskPushNotificationConfigResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/GetTaskPushNotificationConfigSuccessResponse"
        }
      ],
      "description": "JSON-RPC response for the 'tasks/pushNotificationConfig/set' method."
    },
    "GetTaskPushNotificationConfigSuccessResponse": {
      "description": "Represents a successful JSON-RPC response for the `tasks/pushNotificationConfig/get` method.",
      "properties": {
        "id": {
          "description": "The identifier established by the client.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/TaskPushNotificationConfig",
          "description": "The result, containing the requested push notification configuration."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    },
    "ListTasksResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/ListTasksSuccessResponse"
        }
      ],
      "description": "JSON-RPC response for the 'tasks/list' method."
    },
    "ListTasksSuccessResponse": {
      "description": "JSON-RPC success response model for the 'tasks/list' method.",
      "properties": {
        "id": {
          "description": "The identifier established by the client.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/ListTasksResult",
          "description": "The result object on success."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    },
    "ListTaskPushNotificationConfigResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/ListTaskPushNotificationConfigSuccessResponse"
        }
      ],
      "description": "Represents a JSON-RPC response for the `tasks/pushNotificationConfig/list` method."
    },
    "ListTaskPushNotificationConfigSuccessResponse": {
      "description": "Represents a successful JSON-RPC response for the `tasks/pushNotificationConfig/list` method.",
      "properties": {
        "id": {
          "description": "The identifier established by the client.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "description": "The result, containing an array of all push notification configurations for the task.",
          "items": {
            "$ref": "#/definitions/TaskPushNotificationConfig"
          },
          "type": "array"
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    },
    "DeleteTaskPushNotificationConfigResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/DeleteTaskPushNotificationConfigSuccessResponse"
        }
      ],
      "description": "Represents a JSON-RPC response for the `tasks/pushNotificationConfig/delete` method."
    },
    "DeleteTaskPushNotificationConfigSuccessResponse": {
      "description": "Represents a successful JSON-RPC response for the `tasks/pushNotificationConfig/delete` method.",
      "properties": {
        "id": {
          "description": "The identifier established by the client.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "description": "The result is null on successful deletion.",
          "type": "null"
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    },
    "GetAuthenticatedExtendedCardResponse": {
      "anyOf": [
        {
          "$ref": "jsonrpc.json#/definitions/JSONRPCErrorResponse"
        },
        {
          "$ref": "#/definitions/GetAuthenticatedExtendedCardSuccessResponse"
        }
      ],
      "description": "Represents a JSON-RPC response for the `agent/getAuthenticatedExtendedCard` method."
    },
    "GetAuthenticatedExtendedCardSuccessResponse": {
      "description": "Represents a successful JSON-RPC response for the `agent/getAuthenticatedExtendedCard` method.",
      "properties": {
        "id": {
          "description": "The identifier established by the client.",
          "type": [
            "string",
            "integer",
            "null"
          ]
        },
        "jsonrpc": {
          "const": "2.0",
          "description": "The version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
          "type": "string"
        },
        "result": {
          "$ref": "agent.json#/definitions/AgentCard",
          "description": "The result is an Agent Card object."
        }
      },
      "required": [
        "id",
        "jsonrpc",
        "result"
      ],
      "type": "object"
    }
  }
}